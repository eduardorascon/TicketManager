<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="workersDataSet" targetNamespace="http://tempuri.org/workersDataSet.xsd" xmlns:mstns="http://tempuri.org/workersDataSet.xsd" xmlns="http://tempuri.org/workersDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TicketManagerConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TicketManagerConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TicketManager.Properties.Settings.GlobalReference.Default.TicketManagerConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="workersTableAdapter" GeneratorDataComponentClassName="workersTableAdapter" Name="workers" UserDataComponentName="workersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TicketManagerConnectionString (Settings)" DbObjectName="dbo.workers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[workers] WHERE (([Id] = @Original_Id) AND ([workerName] = @Original_workerName) AND ([workerIsEnabled] = @Original_workerIsEnabled))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_workerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="workerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_workerIsEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="workerIsEnabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[workers] ([workerName], [workerIsEnabled]) VALUES (@workerName, @workerIsEnabled);
SELECT Id, workerName, workerIsEnabled FROM workers WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@workerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="workerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@workerIsEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="workerIsEnabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, workerName, workerIsEnabled FROM dbo.workers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[workers] SET [workerName] = @workerName, [workerIsEnabled] = @workerIsEnabled WHERE (([Id] = @Original_Id) AND ([workerName] = @Original_workerName) AND ([workerIsEnabled] = @Original_workerIsEnabled));
SELECT Id, workerName, workerIsEnabled FROM workers WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@workerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="workerName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@workerIsEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="workerIsEnabled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_workerName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="workerName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_workerIsEnabled" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="workerIsEnabled" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\REPOS\TICKETMANAGER\TICKETMANAGER\TICKETMANAGER\TICKETMANAGER.MDF].dbo.workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="workerName" DataSetColumn="workerName" />
              <Mapping SourceColumn="workerIsEnabled" DataSetColumn="workerIsEnabled" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="workersDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="workersDataSet" msprop:Generator_UserDSName="workersDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="workers" msprop:Generator_TableClassName="workersDataTable" msprop:Generator_TableVarName="tableworkers" msprop:Generator_TablePropName="workers" msprop:Generator_RowDeletingName="workersRowDeleting" msprop:Generator_RowChangingName="workersRowChanging" msprop:Generator_RowEvHandlerName="workersRowChangeEventHandler" msprop:Generator_RowDeletedName="workersRowDeleted" msprop:Generator_UserTableName="workers" msprop:Generator_RowChangedName="workersRowChanged" msprop:Generator_RowEvArgName="workersRowChangeEvent" msprop:Generator_RowClassName="workersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="workerName" msprop:Generator_ColumnVarNameInTable="columnworkerName" msprop:Generator_ColumnPropNameInRow="workerName" msprop:Generator_ColumnPropNameInTable="workerNameColumn" msprop:Generator_UserColumnName="workerName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="workerIsEnabled" msprop:Generator_ColumnVarNameInTable="columnworkerIsEnabled" msprop:Generator_ColumnPropNameInRow="workerIsEnabled" msprop:Generator_ColumnPropNameInTable="workerIsEnabledColumn" msprop:Generator_UserColumnName="workerIsEnabled" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:workers" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>